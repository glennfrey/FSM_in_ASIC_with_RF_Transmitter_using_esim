\TLV_version 1d: tl-x.org
\SV
/* verilator lint_off UNUSED*/  /* verilator lint_off DECLFILENAME*/  /* verilator lint_off BLKSEQ*/  /* verilator lint_off WIDTH*/  /* verilator lint_off SELRANGE*/  /* verilator lint_off PINCONNECTEMPTY*/  /* verilator lint_off DEFPARAM*/  /* verilator lint_off IMPLICIT*/  /* verilator lint_off COMBDLY*/  /* verilator lint_off SYNCASYNCNET*/  /* verilator lint_off UNOPTFLAT */  /* verilator lint_off UNSIGNED*/  /* verilator lint_off CASEINCOMPLETE*/  /* verilator lint_off UNDRIVEN*/  /* verilator lint_off VARHIDDEN*/  /* verilator lint_off CASEX*/  /* verilator lint_off CASEOVERLAP*/  /* verilator lint_off PINMISSING*/  /* verilator lint_off LATCH*/  /* verilator lint_off BLKANDNBLK*/  /* verilator lint_off MULTIDRIVEN*/  /* verilator lint_off NULLPORT*/  /* verilator lint_off EOFNEWLINE*/  /* verilator lint_off WIDTHCONCAT*/  /* verilator lint_off ASSIGNDLY*/  /* verilator lint_off MODDUP*/  /* verilator lint_off STMTDLY*/  /* verilator lint_off LITENDIAN*/  /* verilator lint_off INITIALDLY*/  /* verilator lint_off */  

//Your Verilog/System Verilog Code Starts Here:
module glenn_updownCounter(
    input in_Counter_Clk,
    input in_Reset,
    input in_UpOrDown,  //high for UP counter and low for Down counter
    output reg [7:0] out_Count;
    );     
    
    always @(posedge(in_Counter_Clk) or posedge(in_Reset))
     begin
        if(in_Reset == 1) 
            out_Count = 0;
        else
		  begin
            if(in_UporDown == 1)   //Up mode selected
                if(out_Count == 255)
                out_Count <= 255;
                else
                 out_Count <= out_Count + 1; //Incremend Counter
            else  //Down mode selected
                if(out_Count == 0)
                out_Count <= 0;
                else
                out_Count <= out_Count - 1; //Decrement counter					
		  end
     end    
    
endmodule

//Top Module Code Starts here:
	module top(input logic clk, input logic reset, input logic [31:0] cyc_cnt, output logic passed, output logic failed);
		logic  in_Counter_Clk;//input
		logic  in_Reset;//input
		logic  in_UpOrDown;//input
		logic  [7:0] out_Count;//output
//The $random() can be replaced if user wants to assign values
		assign in_Counter_Clk = $random();
		assign in_Reset = $random();
		assign in_UpOrDown = $random();
		glenn_updownCounter glenn_updownCounter(.in_Counter_Clk(in_Counter_Clk), .in_Reset(in_Reset), .in_UpOrDown(in_UpOrDown), .out_Count(out_Count));
	
\TLV
//Add \TLV here if desired                                     
\SV
endmodule

